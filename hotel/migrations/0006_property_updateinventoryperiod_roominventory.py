# Generated by Django 5.0.1 on 2024-01-16 06:44

import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hotel', '0005_rename_time_duration_propertytype_bid_time_duration'),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=30, verbose_name='Hotel Name')),
                ('hotel_nick_name', models.CharField(max_length=20, verbose_name='Hotel Nick Name')),
                ('manager_name', models.CharField(max_length=30, verbose_name='Hotel Name')),
                ('hotel_phone_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{10}$')])),
                ('hotel_website', models.CharField(blank=True, max_length=255, null=True, verbose_name='Hotel website')),
                ('number_of_rooms', models.IntegerField(verbose_name='number_of_rooms')),
                ('check_in_datetime', models.DateTimeField(verbose_name='Check-in Datetime')),
                ('check_out_datetime', models.DateTimeField(verbose_name='Check-out Datetime')),
                ('location', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0.0, 0.0), geography=True, srid=4326, verbose_name='Location')),
                ('nearby_popular_landmark', models.CharField(max_length=255, verbose_name='Nearby Popular Landmark')),
                ('cancellation_days', models.IntegerField(default=False, verbose_name='Cancellation Days')),
                ('cancellation_policy', models.TextField(verbose_name='Cancellation Policy')),
                ('pet_friendly', models.BooleanField(default=False, verbose_name='Pet Friendly')),
                ('breakfast_included', models.BooleanField(default=False, verbose_name='Breakfast Included')),
                ('is_cancellation', models.BooleanField(default=False, verbose_name='Is Cancellation Allowed')),
                ('status', models.BooleanField(default=False, verbose_name='Status')),
                ('is_online', models.BooleanField(default=False, verbose_name='Is Online')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_property', to='hotel.owner')),
                ('property_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_property_type', to='hotel.propertytype')),
                ('room_types', models.ManyToManyField(related_name='owner_room_type', to='hotel.roomtype')),
            ],
        ),
        migrations.CreateModel(
            name='UpdateInventoryPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_duration', models.CharField(max_length=30, verbose_name='Update Duration')),
                ('default_price', models.IntegerField(verbose_name='Default Price')),
                ('min_price', models.IntegerField(verbose_name='Min Price')),
                ('max_price', models.IntegerField(verbose_name='Max Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('common_amenities', models.ManyToManyField(related_name='updated_common_amenities', to='hotel.commonamenities')),
            ],
        ),
        migrations.CreateModel(
            name='RoomInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=30, verbose_name='Room Name')),
                ('floor', models.IntegerField(verbose_name='Floor')),
                ('room_view', models.CharField(max_length=30, verbose_name='Room View')),
                ('area_sqft', models.FloatField(verbose_name='Area sqft')),
                ('is_updated_period', models.BooleanField(default=False, verbose_name='Updated Period')),
                ('adult_capacity', models.IntegerField(verbose_name='Adult Capacity')),
                ('children_capacity', models.IntegerField(verbose_name='Children Capacity')),
                ('default_price', models.IntegerField(verbose_name='Default Price')),
                ('min_price', models.IntegerField(verbose_name='Min Price')),
                ('max_price', models.IntegerField(verbose_name='Max Price')),
                ('status', models.BooleanField(default=False, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('bathroom_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_room_type', to='hotel.bathroomtype')),
                ('bed_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_room_type', to='hotel.bedtype')),
                ('common_amenities', models.ManyToManyField(related_name='property_common_amenities', to='hotel.commonamenities')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_room', to='hotel.property')),
                ('room_features', models.ManyToManyField(related_name='property_room_features', to='hotel.roomfeature')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_room_type', to='hotel.roomtype')),
                ('updated_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_updated_period', to='hotel.updateinventoryperiod')),
            ],
        ),
    ]
